dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/gdal-bindings.cpp)

GDAL_CONFIG="gdal-config"

AC_ARG_WITH([gdal-config],
    AC_HELP_STRING([--with-gdal-config=GDAL_CONFIG],
           [the location of gdal-config]),
           [gdal_config=$withval])
if test [ -n "$gdal_config" ] ; then
    AC_SUBST([GDAL_CONFIG],["${gdal_config}"])
fi
echo "gdal-config: ${GDAL_CONFIG}"
if test `${GDAL_CONFIG} --version`;
then

	PKG_CPPFLAGS=`${GDAL_CONFIG} --cflags`
	PKG_LIBS=`${GDAL_CONFIG} --libs`

else

	echo ""
	echo "The gdal-config script distributed with GDAL could not be found."
	echo "If you have not installed the GDAL libraries, you can"
	echo "download the source from  http://www.gdal.org/"
	echo "If you have installed the GDAL libraries, then make sure that"
	echo "gdal-config is in your path. Try typing gdal-config at a"
	echo "shell prompt and see if it runs. If not, use:"
	echo " --configure-args='--with-gdal-config=/usr/local/bin/gdal-config'"	echo "with appropriate values for your installation."
	echo ""

	exit 1

fi
GDAL_VERSION=`${GDAL_CONFIG} --version`
VER12=`echo "$GDAL_VERSION" | cut -d"." -f1,2`
REQ_GDAL="1.3"
if test "$VER12" != "$REQ_GDAL" ; then
    echo "GDAL version $GDAL_VERSION found ..."
    echo "For building this version, at least GDAL version 1.3.1 is required."
    exit 1
fi

: ${R_HOME=`R RHOME`}
          if test -z "${R_HOME}"; then
            echo "could not determine R_HOME"
            exit 1
fi
CC=`"${R_HOME}/bin/R" CMD config CC`
CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`

AC_ARG_WITH([proj-include],
    AC_HELP_STRING([--with-proj-include=INCLUDE_PATH],
           [the location of proj header files]),
           [proj_include_path=$withval])
if test [ -n "$proj_include_path" ] ; then
    AC_SUBST([PKG_CPPFLAGS],["-I${proj_include_path} ${PKG_CPPFLAGS}"])
fi

AC_SUBST([CPPFLAGS], ["${CPPFLAGS} ${PKG_CPPFLAGS}"])

AC_CHECK_HEADERS(proj_api.h)
if test "$ac_cv_header_proj_api_h" = "no" ; then
    STOP="stop"
fi
          
dnl ditto for a library path
AC_ARG_WITH([proj-lib],
    AC_HELP_STRING([--with-proj-lib=LIB_PATH],
               [the location of proj libraries]),
               [proj_lib_path=$withval])
if test [ -n "$proj_lib_path" ] ; then
    AC_SUBST([PKG_LIBS],[" -L${proj_lib_path} ${PKG_LIBS}"])
fi

AC_SUBST([LIBS], ["${LIBS} ${PKG_LIBS}"])

AC_CHECK_LIB(proj,pj_init_plus,PROJ_SETTING="external",PROJ_SETTING="none",$LIBS)
#echo "PROJ_SETTING: $PROJ_SETTING"
if test "$PROJ_SETTING" = "none" ; then
    STOP="stop"
fi
if test "$STOP" = "stop" ; then
    echo "libproj.a and/or proj_api.h not found."
    echo "If the PROJ.4 library is installed in a non-standard location,"
    echo "use --configure-args='--with-proj-include=/opt/local/include"
    echo "--with-proj-lib=/opt/local/lib' for example, replacing /opt/local/*"
    echo "with appropriate values for your installation."
    echo "If PROJ.4 is not installed, install it."
    exit 1
fi

echo "Package CPP flags: $PKG_CPPFLAGS"
echo "Package LIBS: $PKG_LIBS"

AC_SUBST(PKG_CPPFLAGS)
AC_SUBST(PKG_LIBS)
AC_OUTPUT(src/Makevars)
